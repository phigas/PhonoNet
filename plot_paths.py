""" This module plots paths generated by the simulation and compares it to the paths generated by the AI alghoritm. """

import numpy as np
import matplotlib.pyplot as plt

from matplotlib.colors import LogNorm
from matplotlib.patches import Rectangle, Circle


PROJECT_NAME = "circular_hole"

DIR_MC = "Results/" + PROJECT_NAME
DIR_AI = "checkpoints/" + PROJECT_NAME


def plot_trajectories():
    """Plot the phonon trajectories"""

    # Draw paths from MC simulation in red:
    data = np.genfromtxt(f"{DIR_MC}/Data/Phonon paths.csv", unpack=False, delimiter=',', skip_header=1, encoding='utf-8')
    fig, ax = plt.subplots()
    for index in range(data.shape[1]//3):
        x_coordinates = np.trim_zeros(data[:, 3 * index], trim='b')
        y_coordinates = np.trim_zeros(data[:, 3 * index + 1], trim='b')
        max_steps = min([x_coordinates.shape[0], y_coordinates.shape[0]])
        ax.plot(x_coordinates[:max_steps], y_coordinates[:max_steps], linewidth=0.2, color="red")

    # Draw paths generated by AI in blue:
    data = np.genfromtxt(f"{DIR_AI}/first_test/generated_paths.csv", unpack=True, delimiter=',', skip_header=0, encoding='utf-8')
    for index in range(data.shape[1]//3):
        x_coordinates = np.trim_zeros(data[:, 3 * index], trim='b')
        y_coordinates = np.trim_zeros(data[:, 3 * index + 1], trim='b')
        max_steps = min([x_coordinates.shape[0], y_coordinates.shape[0]])
        ax.plot(x_coordinates[:max_steps], y_coordinates[:max_steps], linewidth=0.2, color="blue")

    # Set labels:
    ax.set_xlabel('X (μm)', fontsize=12)
    ax.set_ylabel('Y (μm)', fontsize=12)
    ax.set_aspect('equal', 'datalim')
    fig.savefig("Phonon paths XY.pdf", dpi=600, format='pdf', bbox_inches="tight")
    plt.show()


if __name__ == "__main__":
    plot_trajectories()
